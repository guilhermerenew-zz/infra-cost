# You can use this file to define resource usage estimates for Infracost to use when calculating
# the cost of usage-based resource, such as AWS S3 or Lambda.
# `infracost breakdown --usage-file infracost-usage.yml [other flags]`
# See https://infracost.io/usage-file/ for docs
version: v0.1
resource_usage:
  aws_data_transfer.my_region:
    region: ap-northeast-1 # Region the data transfer is originating from.
    monthly_intra_region_gb: 1000 # Monthly data transferred between availability zones in the region.
    monthly_outbound_us_east_to_us_east_gb: 0 # Monthly data transferred between US east regions. NOTE: this is only valid if the region is a us-east region.
    # monthly_outbound_other_regions_gb: 0 # Monthly data transferred to other AWS regions.
    monthly_outbound_internet_gb: 1000 # Monthly data transferred to the Internet.
  ##
  ## The following usage values are all commented-out, you can uncomment resources and customize as needed.
  ##
  # aws_db_instance.wikidatabase:
    # additional_backup_storage_gb: 0.0 # Amount of backup storage used that is in excess of 100% of the storage size for all databases in GB.
    # monthly_standard_io_requests: 0 # Monthly number of input/output requests for database.
    # monthly_additional_performance_insights_requests: 0 # Monthly Performance Insights API requests above the 1000000 requests included in the free tier.
  # aws_db_instance.wikidatabase-replica:
    # additional_backup_storage_gb: 0.0 # Amount of backup storage used that is in excess of 100% of the storage size for all databases in GB.
    # monthly_standard_io_requests: 0 # Monthly number of input/output requests for database.
    # monthly_additional_performance_insights_requests: 0 # Monthly Performance Insights API requests above the 1000000 requests included in the free tier.
  # aws_elb.mw_elb:
    # monthly_data_processed_gb: 0.0 # Monthly data processed by a Classic Load Balancer in GB.
  # aws_instance.grafana:
    # operating_system: linux # Override the operating system of the instance, can be: linux, windows, suse, rhel.
    # reserved_instance_type: "" # Offering class for Reserved Instances, can be: convertible, standard.
    # reserved_instance_term: "" # Term for Reserved Instances, can be: 1_year, 3_year.
    # reserved_instance_payment_option: "" # Payment option for Reserved Instances, can be: no_upfront, partial_upfront, all_upfront.
    # monthly_cpu_credit_hrs: 0 # Number of hours in the month where the instance is expected to burst. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
    # vcpu_count: 0 # Number of the vCPUs for the instance type. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
  # aws_instance.webserver1:
    # operating_system: linux # Override the operating system of the instance, can be: linux, windows, suse, rhel.
    # reserved_instance_type: "" # Offering class for Reserved Instances, can be: convertible, standard.
    # reserved_instance_term: "" # Term for Reserved Instances, can be: 1_year, 3_year.
    # reserved_instance_payment_option: "" # Payment option for Reserved Instances, can be: no_upfront, partial_upfront, all_upfront.
    # monthly_cpu_credit_hrs: 0 # Number of hours in the month where the instance is expected to burst. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
    # vcpu_count: 0 # Number of the vCPUs for the instance type. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
  # aws_instance.webserver2:
    # operating_system: linux # Override the operating system of the instance, can be: linux, windows, suse, rhel.
    # reserved_instance_type: "" # Offering class for Reserved Instances, can be: convertible, standard.
    # reserved_instance_term: "" # Term for Reserved Instances, can be: 1_year, 3_year.
    # reserved_instance_payment_option: "" # Payment option for Reserved Instances, can be: no_upfront, partial_upfront, all_upfront.
    # monthly_cpu_credit_hrs: 0 # Number of hours in the month where the instance is expected to burst. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
    # vcpu_count: 0 # Number of the vCPUs for the instance type. Only applicable with t2, t3 & t4 Instance types. T2 requires credit_specification to be unlimited.
  # aws_lambda_function.hello_world-gui:
    # monthly_requests: 0 # Monthly requests to the Lambda function.
    # request_duration_ms: 0 # Average duration of each request in milliseconds.
  # aws_route53_record.database-record:
    # monthly_standard_queries: 0 # Monthly number of Standard queries.
    # monthly_latency_based_queries: 0 # Monthly number of Latency Based Routing queries.
    # monthly_geo_queries: 0 # Monthly number of Geo DNS and Geoproximity queries.
